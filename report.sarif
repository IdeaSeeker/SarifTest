{
  "$schema" : "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "utbot",
        "organization" : "huawei",
        "version" : "1.0",
        "rules" : [ {
          "id" : "utbot.unchecked.ArithmeticException",
          "name" : "ArithmeticException",
          "shortDescription" : {
            "text" : "Unchecked ArithmeticException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception ArithmeticException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/ArithmeticException.html"
          }
        }, {
          "id" : "utbot.unchecked.NullPointerException",
          "name" : "NullPointerException",
          "shortDescription" : {
            "text" : "Unchecked NullPointerException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception NullPointerException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html"
          }
        }, {
          "id" : "utbot.unchecked.ArrayIndexOutOfBoundsException",
          "name" : "ArrayIndexOutOfBoundsException",
          "shortDescription" : {
            "text" : "Unchecked ArrayIndexOutOfBoundsException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception ArrayIndexOutOfBoundsException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/ArrayIndexOutOfBoundsException.html"
          }
        } ]
      }
    },
    "results" : [ {
      "ruleId" : "utbot.unchecked.ArithmeticException",
      "level" : "error",
      "message" : {
        "text" : "Unchecked exception: java.lang.ArithmeticException: / by zero.",
        "markdown" : "Test case: `import org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class MainClassTest {\n    ///region SUCCESSFUL EXECUTIONS for method main(java.lang.String[])\n    \n    /**\n    <pre>\n    Test invokes:\n *     PrintStream::println once\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"main: -> PrintStreamPrintln\")\n    public void testMain_PrintStreamPrintln() throws Throwable  {\n        MainClass.main(null);\n    }\n    ///endregion\n    \n    ///region SUCCESSFUL EXECUTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): False }\n * returns from: {@code return a[i] + tmp; }\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 : False -> return a[i] + tmp\")\n    public void testExample_INotEqualsNegative2() throws Throwable  {\n        int[] intArray = new int[2];\n        intArray[0] = -255;\n        intArray[1] = -255;\n        \n        int actual = MainClass.example(intArray, 1);\n        \n        assertEquals(-254, actual);\n    }\n    ///endregion\n    \n    ///region ERROR SUITE for method example(int[], int)\n    \n    /**\n    <pre>\n    Test \n * throws ArithmeticException in: int tmp = 1 / i;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: tmp = 1 / i : True -> ThrowArithmeticException\")\n    public void testExample_ThrowArithmeticException() throws Throwable  {\n        MainClass.example(null, 0);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws NullPointerException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowNullPointerException\")\n    public void testExample_ThrowNullPointerException() throws Throwable  {\n        MainClass.example(null, -255);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, 128);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException_1() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, -256);\n    }\n    ///endregion\n    \n    ///region EXPLICITLY THROWN UNCHECKED EXCEPTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): True }\n * \n * throws RuntimeException after condition: i == -2\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 -> ThrowRuntimeException\")\n    public void testExample_IEqualsNegative2() throws Throwable  {\n        MainClass.example(null, -2);\n    }\n    ///endregion\n    \n}\n`"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/MainClass.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 13,
            "endColumn" : 23
          }
        }
      } ]
    }, {
      "ruleId" : "utbot.unchecked.NullPointerException",
      "level" : "error",
      "message" : {
        "text" : "Unchecked exception: java.lang.NullPointerException.",
        "markdown" : "Test case: `import org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class MainClassTest {\n    ///region SUCCESSFUL EXECUTIONS for method main(java.lang.String[])\n    \n    /**\n    <pre>\n    Test invokes:\n *     PrintStream::println once\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"main: -> PrintStreamPrintln\")\n    public void testMain_PrintStreamPrintln() throws Throwable  {\n        MainClass.main(null);\n    }\n    ///endregion\n    \n    ///region SUCCESSFUL EXECUTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): False }\n * returns from: {@code return a[i] + tmp; }\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 : False -> return a[i] + tmp\")\n    public void testExample_INotEqualsNegative2() throws Throwable  {\n        int[] intArray = new int[2];\n        intArray[0] = -255;\n        intArray[1] = -255;\n        \n        int actual = MainClass.example(intArray, 1);\n        \n        assertEquals(-254, actual);\n    }\n    ///endregion\n    \n    ///region ERROR SUITE for method example(int[], int)\n    \n    /**\n    <pre>\n    Test \n * throws ArithmeticException in: int tmp = 1 / i;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: tmp = 1 / i : True -> ThrowArithmeticException\")\n    public void testExample_ThrowArithmeticException() throws Throwable  {\n        MainClass.example(null, 0);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws NullPointerException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowNullPointerException\")\n    public void testExample_ThrowNullPointerException() throws Throwable  {\n        MainClass.example(null, -255);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, 128);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException_1() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, -256);\n    }\n    ///endregion\n    \n    ///region EXPLICITLY THROWN UNCHECKED EXCEPTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): True }\n * \n * throws RuntimeException after condition: i == -2\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 -> ThrowRuntimeException\")\n    public void testExample_IEqualsNegative2() throws Throwable  {\n        MainClass.example(null, -2);\n    }\n    ///endregion\n    \n}\n`"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/MainClass.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 9,
            "endColumn" : 25
          }
        }
      } ]
    }, {
      "ruleId" : "utbot.unchecked.ArrayIndexOutOfBoundsException",
      "level" : "error",
      "message" : {
        "text" : "Unchecked exception: java.lang.ArrayIndexOutOfBoundsException: 128.",
        "markdown" : "Test case: `import org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class MainClassTest {\n    ///region SUCCESSFUL EXECUTIONS for method main(java.lang.String[])\n    \n    /**\n    <pre>\n    Test invokes:\n *     PrintStream::println once\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"main: -> PrintStreamPrintln\")\n    public void testMain_PrintStreamPrintln() throws Throwable  {\n        MainClass.main(null);\n    }\n    ///endregion\n    \n    ///region SUCCESSFUL EXECUTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): False }\n * returns from: {@code return a[i] + tmp; }\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 : False -> return a[i] + tmp\")\n    public void testExample_INotEqualsNegative2() throws Throwable  {\n        int[] intArray = new int[2];\n        intArray[0] = -255;\n        intArray[1] = -255;\n        \n        int actual = MainClass.example(intArray, 1);\n        \n        assertEquals(-254, actual);\n    }\n    ///endregion\n    \n    ///region ERROR SUITE for method example(int[], int)\n    \n    /**\n    <pre>\n    Test \n * throws ArithmeticException in: int tmp = 1 / i;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: tmp = 1 / i : True -> ThrowArithmeticException\")\n    public void testExample_ThrowArithmeticException() throws Throwable  {\n        MainClass.example(null, 0);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws NullPointerException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowNullPointerException\")\n    public void testExample_ThrowNullPointerException() throws Throwable  {\n        MainClass.example(null, -255);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, 128);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException_1() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, -256);\n    }\n    ///endregion\n    \n    ///region EXPLICITLY THROWN UNCHECKED EXCEPTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): True }\n * \n * throws RuntimeException after condition: i == -2\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 -> ThrowRuntimeException\")\n    public void testExample_IEqualsNegative2() throws Throwable  {\n        MainClass.example(null, -2);\n    }\n    ///endregion\n    \n}\n`"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/MainClass.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 9,
            "endColumn" : 25
          }
        }
      } ]
    }, {
      "ruleId" : "utbot.unchecked.ArrayIndexOutOfBoundsException",
      "level" : "error",
      "message" : {
        "text" : "Unchecked exception: java.lang.ArrayIndexOutOfBoundsException: -256.",
        "markdown" : "Test case: `import org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class MainClassTest {\n    ///region SUCCESSFUL EXECUTIONS for method main(java.lang.String[])\n    \n    /**\n    <pre>\n    Test invokes:\n *     PrintStream::println once\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"main: -> PrintStreamPrintln\")\n    public void testMain_PrintStreamPrintln() throws Throwable  {\n        MainClass.main(null);\n    }\n    ///endregion\n    \n    ///region SUCCESSFUL EXECUTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): False }\n * returns from: {@code return a[i] + tmp; }\n * </pre>\n     */\n    @Test(timeout = 10000)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 : False -> return a[i] + tmp\")\n    public void testExample_INotEqualsNegative2() throws Throwable  {\n        int[] intArray = new int[2];\n        intArray[0] = -255;\n        intArray[1] = -255;\n        \n        int actual = MainClass.example(intArray, 1);\n        \n        assertEquals(-254, actual);\n    }\n    ///endregion\n    \n    ///region ERROR SUITE for method example(int[], int)\n    \n    /**\n    <pre>\n    Test \n * throws ArithmeticException in: int tmp = 1 / i;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: tmp = 1 / i : True -> ThrowArithmeticException\")\n    public void testExample_ThrowArithmeticException() throws Throwable  {\n        MainClass.example(null, 0);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws NullPointerException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowNullPointerException\")\n    public void testExample_ThrowNullPointerException() throws Throwable  {\n        MainClass.example(null, -255);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, 128);\n    }\n    \n    /**\n    <pre>\n    Test \n * throws ArrayIndexOutOfBoundsException in: return a[i] + tmp;\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: return a[i] + tmp : True -> ThrowArrayIndexOutOfBoundsException\")\n    public void testExample_ThrowArrayIndexOutOfBoundsException_1() throws Throwable  {\n        int[] intArray = new int[1];\n        intArray[0] = -255;\n        \n        MainClass.example(intArray, -256);\n    }\n    ///endregion\n    \n    ///region EXPLICITLY THROWN UNCHECKED EXCEPTIONS for method example(int[], int)\n    \n    /**\n    <pre>\n    Test executes conditions:\n *     {@code (i == -2): True }\n * \n * throws RuntimeException after condition: i == -2\n * </pre>\n     */\n    @Test(timeout = 10000, expected = Throwable.class)\n    //@org.junit.jupiter.api.DisplayName(\"example: i == -2 -> ThrowRuntimeException\")\n    public void testExample_IEqualsNegative2() throws Throwable  {\n        MainClass.example(null, -2);\n    }\n    ///endregion\n    \n}\n`"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/MainClass.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 9,
            "endColumn" : 25
          }
        }
      } ]
    } ]
  } ]
}
