name: "Run test-github-action"

on:
  workflow_dispatch:
    inputs:
      pushTests:
        description: "Push generated tests to the repository"
        type: boolean
        default: true
#       targetClasses:
#         description: "Classes for test generation ('[]' = all)"
#         type: string
#         default: '[]'
#       generatedTestsRelativeRoot:
#         description: "Relative path to the root of the tests"
#         type: string
#         default: '.utbot/test'
      testFramework:
        type: choice
        options:
          - junit4
          - junit5
          - testng
        default: 'junit5'
      generationTimeout:
        description: "Time budget for one class (ms)"
        type: string
        default: '60000'
      codegenLanguage:
        type: choice
        options:
          - java
          - kotlin
        default: java
      mockStrategy:
        type: choice
        options:
          - 'do-not-mock'
          - 'package-based'
          - 'all-except-cut'
        default: 'package-based'
      staticsMocking:
        type: choice
        options: 
          - 'do-not-mock-statics'
          - 'mock-statics'
        default: 'mock-statics'
      forceStaticMocking:
        type: choice
        options:
          - 'force'
          - 'do-not-force'
        default: 'force'
#       classesToMockAlways:
#         type: string
#         default: '[]'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 8

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 6.8

    - name: Run test-github-action
      uses: Ideaseeker/test-github-action@main
      with:
        pushTests: ${{ inputs.pushTests }}
        targetClasses: ${{ inputs.targetClasses }}
        generatedTestsRelativeRoot: ${{ inputs.generatedTestsRelativeRoot }}
        testFramework: ${{ inputs.testFramework }}
        generationTimeout: ${{ inputs.generationTimeout }}
        codegenLanguage: ${{ inputs.codegenLanguage }}
        mockStrategy: ${{ inputs.mockStrategy }}
        staticsMocking: ${{ inputs.staticsMocking }}
        forceStaticMocking: ${{ inputs.forceStaticMocking }}
        classesToMockAlways: ${{ inputs.classesToMockAlways }}
